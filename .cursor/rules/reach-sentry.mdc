---
description: Get a training traceback through sentry
globs: 
alwaysApply: false
---
## Projects to use
- All the issues related to trainings or distributed executions are in the project `cloud-training` with id `11`. There is absolutely no need to search into another project.
- All the issues related to inferences are in the project `deep-inference` with id `10`. There is absolutely no
need to search into another project.

To find a training, you can use the tag `training_name`.

## Auth
Extract credentials from env or `.env` file
- Use SENTRY_ACCESS_TOKEN as bearer token
- Use SENTRY_HOST for base URL (e.g., sentry.tooling.veesion.io)

## API Endpoints to Use

### Search issues by project
```bash
curl -H "Authorization: Bearer {TOKEN}" "https://{SENTRY_HOST}/api/0/projects/veesion/{PROJECT_SLUG}/issues/?sort=date"
```

### Search issues with query filters
```bash
curl -H "Authorization: Bearer {TOKEN}" "https://{SENTRY_HOST}/api/0/projects/veesion/{PROJECT_SLUG}/issues/?query={SEARCH_QUERY}&sort=date"
```

### Get issue details
```bash
curl -H "Authorization: Bearer {TOKEN}" "https://{SENTRY_HOST}/api/0/issues/{ISSUE_ID}/"
```

### Get specific tag values
```bash
curl -H "Authorization: Bearer {TOKEN}" "https://{SENTRY_HOST}/api/0/issues/{ISSUE_ID}/tags/{TAG_KEY}/"
```

## Common Search Patterns

- `tag_name:tag_value` - Filter by specific tag
- `is:unresolved` - Only unresolved issues  
- `is:resolved` - Only resolved issues
- `sort=date` - Most recent first
- `sort=count` - Most frequent first

## Workflow

1. Find target project using this rule
2. Search issues in that project with filters if needed
3. Get detailed issue information using issue ID
4. Use it to investigate
